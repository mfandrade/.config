#!/bin/sh

MSG_FILE="$1"

# checks for GLYPH=no as an envvar
if [ -n "$GLYPH" ]; then
    VAL=$(echo "$GLYPH" | tr '[:upper:]' '[:lower:]' | tr -d '[:space:]')
    case "$VAL" in
        0 | no | n | false) exit 0 ;;
    esac
fi

# checks for GLYPH=no uncommented in the body message
if grep -q "^GLYPH=" "$MSG_FILE"; then
    VALOR=$(grep "^GLYPH=" "$MSG_FILE" | cut -d= -f2 | tr '[:upper:]' '[:lower:]' | tr -d '[:space:]')
    case "$VALOR" in
        0 | no | n | false) exit 0 ;;
    esac
fi
sed -i '/^GLYPH=/d' "$MSG_FILE"

# if the HEAD's hash is the same as the staging hash, it's an amend
if [ "$(git rev-parse HEAD)" = "$(git write-tree)" ]; then
    exit 0
fi

FIRST_LINE=$(head -n 1 "$MSG_FILE")

case "$FIRST_LINE" in
    feat:*) EMOJI="✨" ;;
    fix:*) EMOJI="🩹" ;;
    chore:*) EMOJI="🧹" ;;
    style:*) EMOJI="💅" ;;
    refactor:*) EMOJI="🔨" ;;
    docs:*) EMOJI="📜" ;;
    test:*) EMOJI="🚦" ;;
    ci:*) EMOJI="📦" ;;
    deploy:*) EMOJI="🚀" ;;
    perf:*) EMOJI="🏃" ;;
    debug:*) EMOJI="🧪" ;;
    "BREAKING CHANGE:"*) EMOJI="🚨" ;;
    *) EMOJI="" ;;
esac

if [ -n "$EMOJI" ]; then
    sed -i "1s/^\([a-zA-Z ]*:\)\(.*\)/\1${EMOJI}\2/" "$MSG_FILE"
fi
